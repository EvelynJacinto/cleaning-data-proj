.01*28
.915 ^ 2
?tdist
qt(.025)
qt(.025,1)
.88^4
1-.88^4
248.3-244.8
3.5/.0066
qnorm(.02)
qnorm(.01)
qnorm(.0066)
3.5/2.47
3.5-1.41
3.5+1.41
2.65+6.48/2
(2.65+6.48)/2
248.3-244.8
(0.87+6.13)/2
(-2.76+9.76)/2
(2.65+6.48)/2
90/15
276+468+87
qf(.97,df1=2,df2=1)
pf(828,df1-2,df2=1)
pf(828,df1=2,df2=1)
1627/195528
9/15
.6*30
195528-1627
1627/2
(195528-1627)/829
813.5/233.9
qt(.025,9)
3.5/2.262157
3.5 - 3.5/2.262157
qt(.01,9)
3.5(1-1/2.821438)
3.5*(1-1/2.821438)
sqrt((3.5/2.821438)^2/5)
sqrt(0,11*0.89/100)
sqrt(0.11*0.89/100)
11+(1.96*.031)
sqrt(.2*.8/3326)
46/625
112*46/625
.05*.93+.95*.03
.05*.93/(.075)
1-0.7467
1-(1-0.7467)*(251/(251-8))
(9+12)/30
0.7*.3
29/30
29/30 * .2
500*500
500^3
install.packages("httr")
install.packages("httpuv")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(Bodyweight)
str(BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, panel = panel.loess)
qplot(Wind, Ozone, data = airquality, smooth = "loess")
qplot(Wind, Ozone, data = airquality) + geom_smooth()
qplot(Wind, Ozone, data = airquality) + stats_smooth("loess")
library(reshape2)
# load datasets
subjtest <- read.table("./test/subject_test.txt")
testlabels <- read.table("./test/y_test.txt")
setwd("~/Coursera Videos/Getting and Cleaning Data/UCI HAR Dataset")
subjtest <- read.table("./test/subject_test.txt")
testlabels <- read.table("./test/y_test.txt")
test <- read.table("./test/X_test.txt", colClasses="numeric")
activity <- read.table("activity_labels.txt", stringsAsFactors=FALSE)
subjtrain <- read.table("./train/subject_train.txt")
trainlabels <- read.table("./train/y_train.txt")
train <- read.table("./train/X_train.txt", colClasses="numeric")
#check dimensions and structure
# test dataset has 2947 rows and 561 columns
# train dataset has 7352 rows and 561 columns
dim(subjtest)
dim(testlabels)
dim(test)
dim(subjtrain)
dim(trainlabels)
dim(train)
# convert activity codes to activity names
testlabels$V1 <- factor(testlabels$V1, levels=activity$V1, labels=activity$V2)
trainlabels$V1 <- factor(trainlabels$V1, levels=activity$V1, labels=activity$V2)
str(testlabels)
str(trainlabels)
# choose only columns for mean and standard deviation
features <- read.table("features.txt", stringsAsFactors=FALSE)
meanfeatures <- features[grep("mean()", features$V2, fixed=TRUE),]
stdfeatures <- features[grep("std()",features$V2),]
features2 <- merge(meanfeatures,stdfeatures, by=c("V1","V2"), all=TRUE)
testset <- test[,features2$V1]
trainset <- train[,features2$V1]
# there are 66 mean and standard deviation columns
dim(testset)
dim(trainset)
dim(features2)
# combine all desired test columns
testdf <- cbind(subjtest, testlabels, testset)
dim(testdf)
traindf <- cbind(subjtrain, trainlabels, trainset)
dim(traindf)
# combine train and test data frames and assign column names
combined <- rbind(testdf, traindf)
dim(combined)     # 7352 + 2947 = 10299 rows and 68 columns
names(combined) <- c("SubjectID","Activity", features2$V2)
names(combined)
# create data frame of average per subject and activity
melted <- melt(combined, id.vars=c("SubjectID","Activity"))
dim(melted)       # 10299 * 66 = 679734 rows and 4 columns
head(melted)
recombined <- dcast(melted, SubjectID + Activity ~ variable, mean)
dim(recombined)    # 180 rows = 30 subjects * 6 activities; 68 columns original
head(recombined)
write.table(recombined,file="UCI_HAR.txt",row.names=FALSE)
